openapi: 3.0.0
info:
  title: RDSI API
  description: RDSI API
  version: 1.0.0

servers:
  - url: https://rdsi-client.adccd1-prod.apps.silver.devops.gov.bc.ca/api/v1
    description: RDSI API Production
  - url: http://localhost:8080/api/v1
    description: RDSI API Test

paths:
  /api/v1/signup:
    post:
      tags:
        - auth
        - users
      summary: Sign up with user profile
      parameters:
        - name: body
          in: body
          description: user data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


  /api/v1/login:
    post:
      tags:
      - auth
      summary: Login with email and password
      parameters:
      - name: body
        in: body
        description: login data
        required: true
        schema:
          $ref: '#/definitions/login'
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'

  /api/v1/logout:
    post:
      tags:
        - auth
      summary: Log out with auth
      responses:
        200:
          description: 'OK'
        401:
          description: 'Unauthorized'

# [GET] users
  /api/v1/users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
       - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /api/v1/users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PATCH] users/id
    patch:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: email
      password:
        type: string
        description: password - 8 ~ 20 lowercase, uppercase, and numbers or special characters
  users:
    type: object
    required:
        - email
        - password
    properties:
      email:
        type: string
        description: email
      password:
        type: string
        description: password - 8 ~ 20 lowercase, uppercase, and numbers or special characters
      firstName:
        type: string
        description: first name
      lastName:
        type: string
        description: last name
      title:
        type: string
        description: job title
      ministry:
        type: string
        description: ministry
      role:
        type: string
        description: role in reporting process
schemes:
 - https
 - http
